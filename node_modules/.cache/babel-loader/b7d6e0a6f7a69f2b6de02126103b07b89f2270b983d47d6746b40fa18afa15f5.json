{"ast":null,"code":"import React from \"react\";\nimport Comments from \"./components/comments/comments\";\nconst useFunction = () => {\n  const addComment = (tree, commentId, newComment) => {\n    if (!Array.isArray(tree.replies)) {\n      tree.replies = [];\n    }\n    if (tree.id === commentId) {\n      // Add the new comment to the beginning of the replies array\n      tree.replies.unshift(newComment);\n      return tree;\n    }\n    const updatedReplies = tree.replies.map(com => addComment(com, commentId, newComment));\n    reu;\n  };\n  return {\n    addComment\n  };\n};\nexport default useFunction;","map":{"version":3,"names":["React","Comments","useFunction","addComment","tree","commentId","newComment","Array","isArray","replies","id","unshift","updatedReplies","map","com","reu"],"sources":["C:/Users/ramma/OneDrive/Desktop/nested-react-components/src/useFunction.js"],"sourcesContent":["import React from \"react\";\r\nimport Comments from \"./components/comments/comments\";\r\n\r\nconst useFunction = () => {\r\n  const addComment = (tree, commentId, newComment) => {\r\n    if (!Array.isArray(tree.replies)) {\r\n      tree.replies = [];\r\n    }\r\n\r\n    if (tree.id === commentId) {\r\n      // Add the new comment to the beginning of the replies array\r\n      tree.replies.unshift(newComment);\r\n      return tree;\r\n    }\r\n\r\n   const updatedReplies = tree.replies.map((com)=> addComment(com, commentId, newComment));\r\n\r\n   reu\r\n  };\r\n  return { addComment };\r\n};\r\n\r\nexport default useFunction;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gCAAgC;AAErD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,UAAU,KAAK;IAClD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACK,OAAO,CAAC,EAAE;MAChCL,IAAI,CAACK,OAAO,GAAG,EAAE;IACnB;IAEA,IAAIL,IAAI,CAACM,EAAE,KAAKL,SAAS,EAAE;MACzB;MACAD,IAAI,CAACK,OAAO,CAACE,OAAO,CAACL,UAAU,CAAC;MAChC,OAAOF,IAAI;IACb;IAED,MAAMQ,cAAc,GAAGR,IAAI,CAACK,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAIX,UAAU,CAACW,GAAG,EAAET,SAAS,EAAEC,UAAU,CAAC,CAAC;IAEvFS,GAAG;EACJ,CAAC;EACD,OAAO;IAAEZ;EAAW,CAAC;AACvB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}