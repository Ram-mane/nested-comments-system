{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramma\\\\OneDrive\\\\Desktop\\\\nested-react-components\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Comments from \"./components/comments/comments\";\nimport { commentData } from \"./Data/commentData\";\nimport useFunction from \"./useFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const {\n    addComment,\n    deleteComment\n  } = useFunction();\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7878/api/allComments\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch comments\");\n      }\n      const commentsData = await response.json();\n      setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const handleAddComments = async (commentId, comment) => {\n    try {\n      await addComment(comments, commentId, comment);\n      fetchComments();\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleCommentDelete = commentId => {\n    deleteComment(commentId);\n    fetchComments();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: comments.map(ele => /*#__PURE__*/_jsxDEV(Comments, {\n      comments: ele,\n      handleAddComments: handleAddComments,\n      handleCommentDelete: handleCommentDelete\n    }, ele.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mF/PZC+CLTKK13hKXAtvq2Ejnig=\", false, function () {\n  return [useFunction];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Comments","commentData","useFunction","jsxDEV","_jsxDEV","App","_s","comments","setComments","addComment","deleteComment","fetchComments","response","fetch","ok","Error","commentsData","json","error","console","handleAddComments","commentId","comment","handleCommentDelete","className","children","map","ele","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ramma/OneDrive/Desktop/nested-react-components/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Comments from \"./components/comments/comments\";\r\nimport { commentData } from \"./Data/commentData\";\r\nimport useFunction from \"./useFunction\";\r\n\r\nfunction App() {\r\n  const [comments, setComments] = useState([]);\r\n  const { addComment, deleteComment } = useFunction();\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, []);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:7878/api/allComments\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch comments\");\r\n      }\r\n      const commentsData = await response.json();\r\n      setComments(commentsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddComments = async (commentId, comment) => {\r\n    try {\r\n      await addComment(comments, commentId, comment);\r\n      fetchComments()\r\n\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCommentDelete = (commentId) => {\r\n     deleteComment( commentId);\r\n     fetchComments()\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        comments.map((ele)=>(\r\n          <Comments\r\n        key={ele.id}\r\n        comments={ele}\r\n        handleAddComments={handleAddComments}\r\n        handleCommentDelete={handleCommentDelete}\r\n      />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEW,UAAU;IAAEC;EAAc,CAAC,GAAGR,WAAW,CAAC,CAAC;EAEnDH,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;MACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CT,WAAW,CAACQ,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;IACtD,IAAI;MACF,MAAMb,UAAU,CAACF,QAAQ,EAAEc,SAAS,EAAEC,OAAO,CAAC;MAC9CX,aAAa,CAAC,CAAC;IAEjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMK,mBAAmB,GAAIF,SAAS,IAAK;IACxCX,aAAa,CAAEW,SAAS,CAAC;IACzBV,aAAa,CAAC,CAAC;EAClB,CAAC;EAED,oBACEP,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAEhBlB,QAAQ,CAACmB,GAAG,CAAEC,GAAG,iBACfvB,OAAA,CAACJ,QAAQ;MAEXO,QAAQ,EAAEoB,GAAI;MACdP,iBAAiB,EAAEA,iBAAkB;MACrCG,mBAAmB,EAAEA;IAAoB,GAHpCI,GAAG,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAAC1B,EAAA,CAlDQD,GAAG;EAAA,QAE4BH,WAAW;AAAA;AAAA+B,EAAA,GAF1C5B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}