{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramma\\\\OneDrive\\\\Desktop\\\\nested-react-components\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Comments from \"./components/comments/comments\";\nimport { commentData } from \"./Data/commentData\";\nimport useFunction from \"./useFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const {\n    addComment,\n    deleteComment\n  } = useFunction();\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7878/api/1\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch comments\");\n      }\n      const commentsData = await response.json();\n      console.log('comment data : ', commentData);\n      setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n\n  // const handleAddComments = (commentId, comment) => {\n  //   const updatedTree = addComment(comments, commentId, comment);\n  //   setComments(updatedTree);\n  // };\n\n  const handleAddComments = async (commentId, comment) => {\n    try {\n      // Add the new comment to the backend\n      const response = await fetch(`http://localhost:7878/api/post/1/comment/${commentId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          content: comment\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add comment\");\n      }\n      // Fetch the updated comments after adding the new comment\n      fetchComments();\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleCommentDelete = commentId => {\n    const updatedTree = deleteComment(comments, commentId);\n    setComments(updatedTree);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Comments, {\n      comments: comments,\n      handleAddComments: handleAddComments,\n      handleCommentDelete: handleCommentDelete\n    }, comments.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mF/PZC+CLTKK13hKXAtvq2Ejnig=\", false, function () {\n  return [useFunction];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Comments","commentData","useFunction","jsxDEV","_jsxDEV","App","_s","comments","setComments","addComment","deleteComment","fetchComments","response","fetch","ok","Error","commentsData","json","console","log","error","handleAddComments","commentId","comment","method","headers","body","JSON","stringify","content","handleCommentDelete","updatedTree","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ramma/OneDrive/Desktop/nested-react-components/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Comments from \"./components/comments/comments\";\r\nimport { commentData } from \"./Data/commentData\";\r\nimport useFunction from \"./useFunction\";\r\n\r\nfunction App() {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const { addComment, deleteComment } = useFunction();\r\n\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, []);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:7878/api/1\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch comments\");\r\n      }\r\n      const commentsData = await response.json();\r\n      console.log('comment data : ', commentData)\r\n      setComments(commentsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const handleAddComments = (commentId, comment) => {\r\n  //   const updatedTree = addComment(comments, commentId, comment);\r\n  //   setComments(updatedTree);\r\n  // };\r\n\r\n\r\n  const handleAddComments = async (commentId, comment) => {\r\n    try {\r\n      // Add the new comment to the backend\r\n      const response = await fetch(`http://localhost:7878/api/post/1/comment/${commentId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ content: comment }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add comment\");\r\n      }\r\n      // Fetch the updated comments after adding the new comment\r\n      fetchComments();\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCommentDelete = (commentId) => {\r\n    const updatedTree = deleteComment(comments, commentId);\r\n    setComments(updatedTree);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <Comments\r\n        key={comments.id}\r\n        comments={comments}\r\n        handleAddComments={handleAddComments}\r\n        handleCommentDelete={handleCommentDelete}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAAEW,UAAU;IAAEC;EAAc,CAAC,GAAGR,WAAW,CAAC,CAAC;EAGnDH,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAElB,WAAW,CAAC;MAC3CO,WAAW,CAACQ,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAOD;EACA;EACA;EACA;;EAGA,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;IACtD,IAAI;MACF;MACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CS,SAAU,EAAC,EAAE;QACpFE,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEN;QAAQ,CAAC;MAC3C,CAAC,CAAC;MACF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA;MACAJ,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMU,mBAAmB,GAAIR,SAAS,IAAK;IACzC,MAAMS,WAAW,GAAGrB,aAAa,CAACH,QAAQ,EAAEe,SAAS,CAAC;IACtDd,WAAW,CAACuB,WAAW,CAAC;EAC1B,CAAC;EACD,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB7B,OAAA,CAACJ,QAAQ;MAEPO,QAAQ,EAAEA,QAAS;MACnBc,iBAAiB,EAAEA,iBAAkB;MACrCS,mBAAmB,EAAEA;IAAoB,GAHpCvB,QAAQ,CAAC2B,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChC,EAAA,CArEQD,GAAG;EAAA,QAG4BH,WAAW;AAAA;AAAAqC,EAAA,GAH1ClC,GAAG;AAuEZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}