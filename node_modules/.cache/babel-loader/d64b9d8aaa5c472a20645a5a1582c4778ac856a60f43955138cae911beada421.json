{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramma\\\\OneDrive\\\\Desktop\\\\nested-react-components\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Comments from \"./components/comments/comments\";\nimport { commentData } from \"./Data/commentData\";\nimport useFunction from \"./useFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const {\n    addComment,\n    deleteComment\n  } = useFunction();\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7878/api/1\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch comments\");\n      }\n      const commentsData = await response.json();\n      console;\n      setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const handleAddComments = (commentId, comment) => {\n    const updatedTree = addComment(comments, commentId, comment);\n    setComments(updatedTree);\n  };\n  const handleCommentDelete = commentId => {\n    const updatedTree = deleteComment(comments, commentId);\n    setComments(updatedTree);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Comments, {\n      comments: comments,\n      handleAddComments: handleAddComments,\n      handleCommentDelete: handleCommentDelete\n    }, comments.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mF/PZC+CLTKK13hKXAtvq2Ejnig=\", false, function () {\n  return [useFunction];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Comments","commentData","useFunction","jsxDEV","_jsxDEV","App","_s","comments","setComments","addComment","deleteComment","fetchComments","response","fetch","ok","Error","commentsData","json","console","error","handleAddComments","commentId","comment","updatedTree","handleCommentDelete","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ramma/OneDrive/Desktop/nested-react-components/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Comments from \"./components/comments/comments\";\r\nimport { commentData } from \"./Data/commentData\";\r\nimport useFunction from \"./useFunction\";\r\n\r\nfunction App() {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const { addComment, deleteComment } = useFunction();\r\n\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, []);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:7878/api/1\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch comments\");\r\n      }\r\n      const commentsData = await response.json();\r\n      console\r\n      setComments(commentsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddComments = (commentId, comment) => {\r\n    const updatedTree = addComment(comments, commentId, comment);\r\n    setComments(updatedTree);\r\n  };\r\n\r\n  const handleCommentDelete = (commentId) => {\r\n    const updatedTree = deleteComment(comments, commentId);\r\n    setComments(updatedTree);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <Comments\r\n        key={comments.id}\r\n        comments={comments}\r\n        handleAddComments={handleAddComments}\r\n        handleCommentDelete={handleCommentDelete}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAAEW,UAAU;IAAEC;EAAc,CAAC,GAAGR,WAAW,CAAC,CAAC;EAGnDH,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CC,OAAO;MACPV,WAAW,CAACQ,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAOD,MAAMC,iBAAiB,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;IAChD,MAAMC,WAAW,GAAGd,UAAU,CAACF,QAAQ,EAAEc,SAAS,EAAEC,OAAO,CAAC;IAC5Dd,WAAW,CAACe,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMC,mBAAmB,GAAIH,SAAS,IAAK;IACzC,MAAME,WAAW,GAAGb,aAAa,CAACH,QAAQ,EAAEc,SAAS,CAAC;IACtDb,WAAW,CAACe,WAAW,CAAC;EAC1B,CAAC;EACD,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA,CAACJ,QAAQ;MAEPO,QAAQ,EAAEA,QAAS;MACnBa,iBAAiB,EAAEA,iBAAkB;MACrCI,mBAAmB,EAAEA;IAAoB,GAHpCjB,QAAQ,CAACoB,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CAhDQD,GAAG;EAAA,QAG4BH,WAAW;AAAA;AAAA8B,EAAA,GAH1C3B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}